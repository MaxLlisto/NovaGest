<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>